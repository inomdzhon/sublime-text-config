[
	{ "keys": ["alt+shift+f"], "command": "reindent" },
	{ "keys": ["ctrl+alt+m"], "command": "toggle_menu" },
	{ "keys": ["ctrl+alt+up"], "command": "select_lines", "args": {"forward": false} },
	{ "keys": ["ctrl+alt+down"], "command": "select_lines", "args": {"forward": true} },
	{
		"keys": ["alt+shift+d"],
		"command": "insert_snippet",
		"args": {
			"contents": "console.log(${1:}$SELECTION);${0}"
		},
		"context": [{
			"key": "selector", "operator": "equal", "operand": "source.js"
		}]
	},
	{
		"keys": ["alt+shift+d"],
		"command": "insert_snippet",
		"args": {
			"contents": "dump(${1:}$SELECTION, 1, 1);${0}"
		},
		"context": [{
			"key": "selector", "operator": "equal", "operand": "source.php"
		}]
	},
	{
		"keys": ["alt+shift+d"],
		"command": "insert_snippet",
		"args": {
			"contents": "<pre>\n\t{{ dump(${1:}$SELECTION) }}\n</pre>${0}"
		},
		"context": [{
			"key": "selector", "operator": "equal", "operand": "text.html.twig"
		}]
	},
	{
		"keys": ["tab"],
		"command": "chain",
		"args": {
			"commands": [
				["expand_abbreviation_by_tab"],
				["reg_replace", {"replacements": ["js_class"]}]
			]
		},
		"context": [
			{
				"operand": "source.js",
				"operator": "equal",
				"match_all": true,
				"key": "selector"
			},
			{
				"key": "preceding_text",
				"operator": "regex_contains",
				"operand": "(\\w+>\\w+|\\s(\\.?|a|abbr|acronym|address|applet|area|article|aside|audio|b|base|basefont|bdi|bdo|bgsound|big|blink|blockquote|body|br|button|canvas|caption|center|cite|code|col|colgroup|command|content|data|datalist|dd|del|details|dfn|dialog|dir|div|dl|dt|element|em|embed|fieldset|figcaption|figure|font|footer|form|frame|frameset|head|header|hgroup|hr|html|i|iframe|image|img|input|ins|isindex|kbd|keygen|label|legend|li|link|listing|main|map|mark|marquee|menu|menuitem|meta|meter|multicol|nav|nobr|noembed|noframes|noscript|object|ol|optgroup|option|output|p|param|picture|plaintext|pre|progress|q|rp|rt|rtc|ruby|s|samp|script|section|select|shadow|small|source|spacer|span|strike|strong|style|sub|summary|sup|table|tbody|td|template|textarea|tfoot|th|thead|time|title|tr|track|tt|u|ul|var|video|wbr|xmp)\\.\\w+)",
				"match_all": true
			},
			{
				"key": "selection_empty",
				"operator": "equal",
				"operand": true,
				"match_all": true
			}
		]
	},
	{
		"keys": ["tab"],
		"command": "expand_abbreviation_by_tab",

		// put comma-separated syntax selectors for which
		// you want to expandEmmet abbreviations into "operand" key
		// instead of SCOPE_SELECTOR.
		// Examples: source.js, text.html - source
		"context": [
			{
				"operand": "meta.group.braces.round.js, text.html",
				"operator": "equal",
				"match_all": true,
				"key": "selector"
			},

			// run only if there's no selected text
			{
				"match_all": true,
				"key": "selection_empty"
			},

			// don't work if there are active tabstops
			{
				"operator": "equal",
				"operand": false,
				"match_all": true,
				"key": "has_next_field"
			},

			// don't work if completion popup is visible and you
			// want to insert completion with Tab. If you want to
			// expand Emmet with Tab even if popup is visible --
			// remove this section
			{
				"operand": false,
				"operator": "equal",
				"match_all": true,
				"key": "auto_complete_visible"
			},
			{
				"match_all": true,
				"key": "is_abbreviation"
			}
		]
	},
	{ "keys": ["ctrl+alt+p"], "command": "prompt_select_workspace" },
]